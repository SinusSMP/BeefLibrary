import org.apache.tools.ant.taskdefs.condition.Os

plugins {
    id "com.github.johnrengelman.shadow" version "8.1.1"
    id 'java-library'
    id 'maven-publish'
}

group = 'ru.whitebeef'
version = '2.2.4'

compileJava.options.encoding = 'UTF-8'

def destinationDir() {
    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
        return file("C:\\plugins\\BeefPlugins\\$project.name")
    } else {
        return file("dest/")
    }
}

def destinationDir = destinationDir()
def jarName = project.name + '.jar';
def versionJarName = project.name + '-' + project.version + '.jar';

def mavenRepoUsername = System.getenv("mvn-repo-username")
def mavenRepoPassword = System.getenv("mvn-repo-token")

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}


repositories {
    mavenCentral()
    maven {
        name = 'papermc-repo'
        url = 'https://repo.papermc.io/repository/maven-public/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven {
        name = 'placeholderapi'
        url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
    }
    maven {
        name = 'PlugMan'
        url = 'https://raw.githubusercontent.com/TheBlackEntity/PlugMan/repository/'
    }
    maven {
        name = 'codemc-repo'
        url = 'https://repo.codemc.io/repository/maven-public/'
    }
    maven {
        name = 'smashup-repository'
        url = 'https://mvn.smashup.ru/releases'
    }
    maven {
        name = 'femboymc-repository'
        url = 'https://mvn.femboymc.lgbt/releases'
    }
    maven {
        url "https://plugins.gradle.org/m2/"
    }

}

dependencies {
    implementation 'me.clip:placeholderapi:2.11.1'
    implementation 'redis.clients:jedis:4.3.0'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.2'
    implementation 'io.papermc.paper:paper-api:1.20.1-R0.1-SNAPSHOT'
    implementation 'dev.folia:folia-api:1.19.4-R0.1-SNAPSHOT'
    implementation 'com.rylinaux:PlugMan:2.3.3'
    implementation 'de.tr7zw:item-nbt-api-plugin:2.11.3'
    implementation 'ru.leonidm:FastNBT:0.3.1-SNAPSHOT'
    implementation 'org.apache.commons:commons-pool2:2.11.1'
}


tasks.build.dependsOn tasks.shadowJar

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

javadoc {
    options.encoding = 'UTF-8'
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}


processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
tasks.build.dependsOn tasks.shadowJar

shadowJar {
    delete destinationDir.toPath().toString() + '\\' + jarName
    delete destinationDir.toPath().toString() + '\\' + versionJarName

    dependencies {
        include dependency("redis.clients:jedis:4.3.0")
        include dependency("org.json:json")
        include dependency("org.apache.commons:commons-pool2:2.11.1")
        include dependency("io.papermc.paper:paper-api:1.20.1-R0.1-SNAPSHOT") // enable to 1.19.4
    }
    relocate("redis.clients.jedis", "ru.whitebeef.beeflibrary.libs.redis")
    relocate("org.json", "ru.whitebeef.beeflibrary.libs.json")
    relocate("org.apache.commons", "ru.whitebeef.beeflibrary.libs.apache")
    relocate("io.papermc.paper", "ru.whitebeef.beeflibrary.libs.paper") // enable to 1.19.4
    destinationDirectory.set(destinationDir)
    archiveFileName.set(jarName)

    doLast {
        copy {
            from destinationDir.toPath()
            into destinationDir.toPath()
            rename { versionJarName }
            duplicatesStrategy(DuplicatesStrategy.INCLUDE)
        }
    }
}
publishing {
    publications {
        myLib(MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            name = "femboymc-repository" //  optional target repository name
            url = "https://mvn.femboymc.lgbt/releases"
            credentials {
                username = mavenRepoUsername
                password = mavenRepoPassword
            }
        }
    }
}
apply plugin: 'java-library'
